"use strict";(self.webpackChunkprod=self.webpackChunkprod||[]).push([[9419],{3905:function(e,n,t){t.d(n,{Zo:function(){return k},kt:function(){return g}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},k=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,k=o(e,["components","mdxType","originalType","parentName"]),p=d(t),g=a,u=p["".concat(l,".").concat(g)]||p[g]||m[g]||s;return t?r.createElement(u,i(i({ref:n},k),{},{components:t})):r.createElement(u,i({ref:n},k))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=p;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var d=2;d<s;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},653:function(e,n,t){t.r(n),t.d(n,{assets:function(){return k},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return m}});var r=t(3117),a=t(102),s=(t(7294),t(3905)),i=["components"],o={description:'Detaljer om integrasjonsm\xf8nsteret "hendelsesbasert provisjonering".',slug:"/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/",title:"Hendelsesbasert provisjonering"},l="Hendelsesbasert provisjonering",d={unversionedId:"datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/index",id:"datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/index",title:"Hendelsesbasert provisjonering",description:'Detaljer om integrasjonsm\xf8nsteret "hendelsesbasert provisjonering".',source:"@site/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/index.md",sourceDirName:"datadeling/god-praksis/integrasjonsmonster/hendelsesbasert",slug:"/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/",permalink:"/datadeling-docs-tmp/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/",editUrl:"https://github.com/jokim/datadelingsdokumentasjon/tree/master/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/index.md",tags:[],version:"current",frontMatter:{description:'Detaljer om integrasjonsm\xf8nsteret "hendelsesbasert provisjonering".',slug:"/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/",title:"Hendelsesbasert provisjonering"},sidebar:"tutorialSidebar",previous:{title:"Gammeldags fullstendig provisjonering",permalink:"/datadeling-docs-tmp/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/"},next:{title:"Hvordan designe dine notifikasjoner",permalink:"/datadeling-docs-tmp/docs/datadeling/god-praksis/notifikasjonsdesign/"}},k={},m=[{value:"N\xe5r b\xf8r dette brukes?",id:"n\xe5r-b\xf8r-dette-brukes",level:2},{value:"Fordeler",id:"fordeler",level:2},{value:"Ulemper",id:"ulemper",level:2},{value:"Fallgruver",id:"fallgruver",level:2},{value:"Se ogs\xe5",id:"se-ogs\xe5",level:2},{value:"Hendelsesbasert oppdatering",id:"hendelsesbasert-oppdatering",level:2},{value:"Provisjonering \u2013 Need to Know",id:"provisjonering--need-to-know",level:3},{value:"Forskjell fra DiFis eNotifikasjon",id:"forskjell-fra-difis-enotifikasjon",level:4}],p={toc:m};function g(e){var n=e.components,o=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"hendelsesbasert-provisjonering"},"Hendelsesbasert provisjonering"),(0,s.kt)("p",null,'Detaljer om integrasjonsm\xf8nsteret "hendelsesbasert provisjonering".'),(0,s.kt)("p",null,"Dette er et integrasjonsm\xf8nster som anbefales brukt ved provisjonering mellom to systemer."),(0,s.kt)("p",null,"TODO: Skriv..."),(0,s.kt)("p",null,"\u200b"),(0,s.kt)("p",null,(0,s.kt)("img",{loading:"lazy",alt:"Bildet kan inneholde: diagram, linje, tekst.",src:t(533).Z,width:"814",height:"434"}),"Skriv inn bildetekst her...Skriv inn bildetekst her..."),(0,s.kt)("p",null,"\u200b"),(0,s.kt)("p",null,"Vanlig flyt:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Kildesystemet f\xe5r endret data om en entitet, for eksempel ved saksbehandling."),(0,s.kt)("li",{parentName:"ol"},"Kildesystemet sender ut en notifikasjon om at entiteten er blitt endret."),(0,s.kt)("li",{parentName:"ol"},"Meldingsk\xf8en tar i mot notifikasjonen og distribuerer den ut til alle konsumenter som abonnerer p\xe5 denne typen notifikasjon."),(0,s.kt)("li",{parentName:"ol"},"Konsumenten mottar notifikasjonen, og ser om den er relevant."),(0,s.kt)("li",{parentName:"ol"},"Konsumenten henter ut data fra kildesystemet sitt API"),(0,s.kt)("li",{parentName:"ol"},"Konsumenten oppdaterer interne data med oppdaterte data fra tilbyderen.")),(0,s.kt)("p",null,"Hvis konsumenten selv er tilbyder av andre kildedata, som blir oppdatert basert p\xe5 dette, vil konsumenten bytte rolle og g\xe5 gjennom samme prosessen. Et eksempel er at en navneendring i HR-systemet vil kunne f\xf8re til at e-postadressen ogs\xe5 vil m\xe5tte endres. HR er kildesystem for navn, og IGA kan v\xe6re kildesystem for e-postadresser."),(0,s.kt)("h2",{id:"n\xe5r-b\xf8r-dette-brukes"},"N\xe5r b\xf8r dette brukes?"),(0,s.kt)("p",null,"Dette m\xf8nsteret passer n\xe5r du trenger \xe5 provisjonere et endesystem med kildedata fra en tilbyder, uten at sluttbrukeren er involvert."),(0,s.kt)("h2",{id:"fordeler"},"Fordeler"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Data blir oppdatert raskere i mange systemer."),(0,s.kt)("li",{parentName:"ul"},"Mye mindre ressurskrevende enn det eldre m\xf8nsteret der du henter ",(0,s.kt)("strong",{parentName:"li"},"alle")," data fra kilden, og oppdaterer konsumenten.")),(0,s.kt)("h2",{id:"ulemper"},"Ulemper"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passer best for system-til-system-integrasjoner."),(0,s.kt)("li",{parentName:"ul"},"Har du veldig mange konsumenter vil det sette h\xf8yere krav til ytelsen hos tilbyderen. Dette kan kompenseres ved for eksempel caching i API manager.")),(0,s.kt)("h2",{id:"fallgruver"},"Fallgruver"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Uthenting"),(0,s.kt)("li",{parentName:"ul"},"Kildesystemet b\xf8r bare sende ut notifikasjoner n\xe5r data faktisk er endret. Falske positive notifikasjoner vil f\xf8re til mer ressursbruk. I verste fall vil du kunne f\xe5 evige meldingsl\xf8kker, for eksempel hvis to systemer som trenger data fra hverandre sender ut notifikasjoner fordi de har mottatt en notifikasjon fra det andre systemet, uten \xe5 se p\xe5 om data faktisk har blitt endret.")),(0,s.kt)("h2",{id:"se-ogs\xe5"},"Se ogs\xe5"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/datadeling/god-praksis/notifikasjonsdesign"},"Utforming av notifikasjoner"))),(0,s.kt)("p",null,"TODO: Gammel:"),(0,s.kt)("h2",{id:"hendelsesbasert-oppdatering"},"Hendelsesbasert oppdatering"),(0,s.kt)("h3",{id:"provisjonering--need-to-know"},"Provisjonering \u2013 Need to Know"),(0,s.kt)("p",null,"Provisjonering er det \xe5 sende en mengde data fra en applikasjon til en annen. Hvorfor man \xf8nsker \xe5 gj\xf8re dette kan v\xe6re mange, men tradisjonelt har man basert integrasjoner p\xe5 provisjonering fordi integrasjoner har v\xe6rt tunge, filbaserte batch-oppdateringer. Man har laget store filer med komplette datasett, flyttet disse til konsumenten og der sammenligner man den store filen med konsumentens database for \xe5 se etter endringer. Dette er ikke en effektiv m\xe5te \xe5 integrere p\xe5. Isteden kan slik provisjonering v\xe6re hendelsesdrevne:"),(0,s.kt)("p",null,(0,s.kt)("img",{loading:"lazy",src:t(533).Z,width:"814",height:"434"}),"\nEn entitet X oppdateres i Kilde. Kilde sender en notifikasjon til MQ om at entitet X er oppdatert. MQ sender en notifikasjon til konsumenter som abonnerer p\xe5 denne typen notifikasjoner om at entitet X er oppdatert. Konsument vet ingenting om hva endringer best\xe5r i, s\xe5 Konsument kontakter API manager for \xe5 f\xe5 tilgang til Kildens WS for \xe5 sp\xf8rre om data om entitet X."),(0,s.kt)("p",null,"Mange applikasjoner, som i dag er baserte p\xe5 gamle integrasjoner med provisjonering, trenger ikke \xe5 provisjonere data i den nye arkitekturen. Likevel er det et behov for provisjonering i de tilfeller der man lager moderne applikasjoner og integrasjoner. Eksempel: N\xe5r en ny person registreres i HR-systemet s\xe5 er ikke HR-systemet ansvarlig for \xe5 utstede en brukerkonto til personen. Dette er IAM-kjernen (tidligere BAS, IdM) ansvarlig for. IAM-kjernen vet ikke at det er registrert en ny person i HR-systemet f\xf8r HR-systemet gir beskjed. IAM-kjernen vil ikke kopiere alle data om personen fra HR-systemet, men den trenger data om personen for \xe5 lage en brukerkonto til vedkommende og da vil IAM-kjernen provisjonere noe data. IAM-kjernen vil beholde oversikt over hvem som er eier for brukerkonti f.eks. Disse eierne er provisjonert fra HR-systemet."),(0,s.kt)("p",null,"Man kan tenke seg et annet eksempel der flyten er lik som i figuren over, men man ikke provisjonerer\xa0\u2013 integrasjonen er basert p\xe5 Need to Know. Forskjellen p\xe5 provisjonering og Need to Know ligger i om konsumenten lagrer kopier av data fra kilden i sine datalagre. Distinksjonen mellom de to er minimal, men generelt skal man fors\xf8ke \xe5 unng\xe5 mellomlagring av data fra et kildesystem og heller hente disse dataene fra kilden ved behov. Av ulike \xe5rsaker kan dette vise seg vanskelig s\xe5 provisjonering vil forekomme ogs\xe5 i den nye arkitekturen."),(0,s.kt)("h4",{id:"forskjell-fra-difis-enotifikasjon"},"Forskjell fra DiFis eNotifikasjon"),(0,s.kt)("p",null,"Selv om ",(0,s.kt)("em",{parentName:"p"},"Need to know")," kan ligne veldig p\xe5 eNotifikasjon-m\xf8nsteret fra DiFis ",(0,s.kt)("a",{parentName:"p",href:"https://doc.difi.no/nasjonal-arkitektur/nab_referanse_arkitekturer_datautveksling/"},"referansearkitektur for datautveksling"),", er det til dels store avvik i m\xf8nstrene:"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Need To Know"),(0,s.kt)("th",{parentName:"tr",align:null},"eNotifikasjon"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"1"),(0,s.kt)("td",{parentName:"tr",align:null},"F\xe5r tilsendt en notifikasjon."),(0,s.kt)("td",{parentName:"tr",align:null})))),(0,s.kt)("p",null,"Konsumenten kan v\xe6re tilstandsl\xf8s, da konsumenten ikke trenger \xe5 ha begrep om hvilke notifikasjoner som er prosessert."),(0,s.kt)("p",null," | M\xe5 hente en liste over notifikasjoner."),(0,s.kt)("p",null,"Konsumenten m\xe5 lagre tilstand, da eNotifikasjon-m\xf8nsteret forutsetter at konsumenter vet hvilke notifikasjoner som er prosessert."),(0,s.kt)("p",null," |\n| 2 | Notifikasjonen inneholder kun nok informasjon til \xe5 identifisere hva som har endret seg."),(0,s.kt)("p",null,"Konsumenten m\xe5 utf\xf8re ",(0,s.kt)("a",{parentName:"p",href:"https://doc.difi.no/nasjonal-arkitektur/nab_referanse_arkitekturer_datautveksling/#_eoppslag_generelt_arkitekturm%C3%B8nster"},"eOppslag")," mot kildesystem f\xf8r det kan avgj\xf8res om det skal utf\xf8res en operasjon."),(0,s.kt)("p",null," | Notifikasjonen inneholder informasjon om hva som har endret seg, og en identifikator til et ",(0,s.kt)("em",{parentName:"p"},"hendelsesdokument")," som inneholder endrede data."),(0,s.kt)("p",null,"eNotifikasjonen b\xe6rer nok data til \xe5 avgj\xf8re om det skal utf\xf8res en operasjon."),(0,s.kt)("p",null," |\n| 3 | Rekkef\xf8lgen notifikasjoner ankommer i er ikke garantert \xe5 v\xe6re velordnet og sekvensiell. | Rekkef\xf8lgen notifikasjoner ankommer i er alltid velordnet og sekvensiell. |\n| 4 | Ingen autorisasjon er n\xf8dvendig da notifikasjoner kun har informasjon om ",(0,s.kt)("em",{parentName:"p"},"hva")," som er endret. Produsenter har ikke begrep om hvem som er konsumenter. | Autorisasjon kan v\xe6re n\xf8dvendig da notifikasjoner kan inneholde data.  "),(0,s.kt)("p",null," I tilfeller der autorisasjon er n\xf8dvendig, m\xe5 produsenter ha et begrep om hvem som skal kunne konsumere hvilke data. |\n| 5 | Need To Know er en implementasjon av ",(0,s.kt)("a",{parentName:"p",href:"https://www.enterpriseintegrationpatterns.com/patterns/conversation/FireAndForget.html"},"Fire And Forget")," og\xa0",(0,s.kt)("a",{parentName:"p",href:"https://doc.difi.no/nasjonal-arkitektur/nab_referanse_arkitekturer_datautveksling/#_eoppslag_generelt_arkitekturm%C3%B8nster"},"eOppslag")," m\xf8nstrene. | eNotifikasjon er en implementasjon av ",(0,s.kt)("a",{parentName:"p",href:"https://martinfowler.com/eaaDev/EventSourcing.html"},"Event Sourcing")," m\xf8nsteret. |"))}g.isMDXComponent=!0},533:function(e,n,t){n.Z=t.p+"assets/images/ws-mq-sirkel-4bd045e962bb27a031ce3cb8a351aca0.png"}}]);