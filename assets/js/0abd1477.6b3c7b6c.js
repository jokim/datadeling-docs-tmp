"use strict";(self.webpackChunkdatadeling=self.webpackChunkdatadeling||[]).push([[6028],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return p}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),d=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=d(r),p=a,k=u["".concat(o,".").concat(p)]||u[p]||g[p]||s;return r?n.createElement(k,l(l({ref:t},m),{},{components:r})):n.createElement(k,l({ref:t},m))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,l=new Array(s);l[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var d=2;d<s;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1136:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return m},default:function(){return u}});var n=r(7462),a=r(3366),s=(r(7294),r(3905)),l=["components"],i={description:'Detaljer om integrasjonsm\xf8nsteret "fullstendig provisjonering".',title:"Gammeldags fullstendig provisjonering"},o="Gammeldags fullstendig provisjonering",d={unversionedId:"datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/index",id:"datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/index",isDocsHomePage:!1,title:"Gammeldags fullstendig provisjonering",description:'Detaljer om integrasjonsm\xf8nsteret "fullstendig provisjonering".',source:"@site/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/index.md",sourceDirName:"datadeling/god-praksis/integrasjonsmonster/gammeldags-batch",slug:"/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/index",permalink:"/datadeling-docs-tmp/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/index",editUrl:"https://github.com/jokim/datadeling-docs-tmp/tree/gh-pages/docs/datadeling/god-praksis/integrasjonsmonster/gammeldags-batch/index.md",version:"current",frontMatter:{description:'Detaljer om integrasjonsm\xf8nsteret "fullstendig provisjonering".',title:"Gammeldags fullstendig provisjonering"},sidebar:"tutorialSidebar",previous:{title:"API som datalager",permalink:"/datadeling-docs-tmp/docs/datadeling/god-praksis/integrasjonsmonster/datalager/index"},next:{title:"Hendelsesbasert provisjonering",permalink:"/datadeling-docs-tmp/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/index"}},m=[{value:"N\xe5r b\xf8r dette brukes?",id:"n\xe5r-b\xf8r-dette-brukes",children:[]},{value:"Fordeler",id:"fordeler",children:[]},{value:"Ulemper",id:"ulemper",children:[]},{value:"Fallgruver",id:"fallgruver",children:[]},{value:"Se ogs\xe5",id:"se-ogs\xe5",children:[]},{value:"Enkel, fullstendig oppdatering",id:"enkel-fullstendig-oppdatering",children:[]}],g={toc:m};function u(e){var t=e.components,r=(0,a.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"gammeldags-fullstendig-provisjonering"},"Gammeldags fullstendig provisjonering"),(0,s.kt)("p",null,'Detaljer om integrasjonsm\xf8nsteret "fullstendig provisjonering".'),(0,s.kt)("p",null,"Dette er muligens det simpleste integrasjonsm\xf8nsteret som i noen tilfeller kan anbefales som integrasjonsm\xf8nster i UH:IntArk. Styrken til m\xf8nsteret er at det er enkelt, og derfor relativt rimelig \xe5 utvikle, og kan derfor vurderes for enkle, mindre tjenester."),(0,s.kt)("p",null,"TODO: Figur"),(0,s.kt)("p",null,"TODO: Skriv..."),(0,s.kt)("p",null,"Kort oppsummert er flyten i integrasjonsm\xf8nsteret:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Hent ut ",(0,s.kt)("em",{parentName:"li"},"alle")," data fra kildesystemets API"),(0,s.kt)("li",{parentName:"ol"},"Overskriv alle data i konsumenten")),(0,s.kt)("p",null,"En slik fullstendig provisjonering vil vere b\xe5de tid- og ressurskrevende, s\xe5 i praksis blir slike integrasjoner ofte bare kj\xf8rt en gang om natta."),(0,s.kt)("p",null,"Optimalisering kan gj\xf8res, for eksempel:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Konsumenten, eller en konnektor, kan sammeligne data mellom konsument og tilbyder, for \xe5 redusere mengden data som m\xe5 oppdateres hos konsumenten."),(0,s.kt)("li",{parentName:"ul"},"Tilbyderen kan ha muligheter for \xe5 filtrere ut data som hentes ut. For eksempel \xe5 bare hente ut data som har blitt endret siden forrige synkronisering. Dette vil kunne betraktelig redusere mengden data som m\xe5 behandles, men du vil m\xe5tte sikre at utdatere/slettet data ogs\xe5 blir slettet hos konsumenten.")),(0,s.kt)("p",null,"Eksempler p\xe5 tjenester som bruker dette integrasjonsm\xf8nsteret:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Gamle systemer som er vurdert til \xe5 v\xe6re for kostbare \xe5 oppgradere, uten at det gir nok gevinst. Dette f\xf8lger prinsippet ",(0,s.kt)("a",{parentName:"li",href:"/docs/datadeling/prinsippene/fleksibel"},"Fleksibel: kost/nyttevurderinger kan legitimere avvik"),"."),(0,s.kt)("li",{parentName:"ul"},"Gamle systemer som st\xe5r p\xe5 vent for oppgradering eller videreutvikling."),(0,s.kt)("li",{parentName:"ul"},"Rapporteringstjenester med h\xf8y toleranse for utdaterte data.")),(0,s.kt)("h2",{id:"n\xe5r-b\xf8r-dette-brukes"},"N\xe5r b\xf8r dette brukes?"),(0,s.kt)("p",null,"Dette m\xf8nsteret b\xf8r vanligvis ikke brukes, men kan vurderes for mindre tjenester som ikke har behov for oppdaterte data."),(0,s.kt)("p",null,"M\xf8nsteret gjelder system-til-system-integrasjoner, alts\xe5 der sluttbrukeren ikke er direkte involvert."),(0,s.kt)("h2",{id:"fordeler"},"Fordeler"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Ofte det enkleste og rimeligste alternativet \xe5 utvikle.")),(0,s.kt)("h2",{id:"ulemper"},"Ulemper"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Passer best for system-til-system-integrasjoner."),(0,s.kt)("li",{parentName:"ul"},"Fullstendige provisjoneringer tar tid, s\xe5 du vil f\xe5 forsinkelser. Sluttbrukere har ofte forvetninger om at tjenester skal vere klare umiddelbart."),(0,s.kt)("li",{parentName:"ul"},"Fullstendige provisjeringer er ressurskrevende, spesielt for kildesystemet, og ved store datamengder."),(0,s.kt)("li",{parentName:"ul"},"Har du veldig mange konsumenter vil det sette h\xf8yere krav til ytelsen hos tilbyderen. Dette kan kompenseres ved for eksempel caching i API manager.")),(0,s.kt)("h2",{id:"fallgruver"},"Fallgruver"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Integrerer via et standard API, og ikke ta snarveier om filer. Eldre kildesystemer har ofte brukt dette m\xf8nsteret, men basert seg p\xe5 \xe5 produserer egne filer med relevante data, ofte skreddersydd per konsument. Dette frar\xe5des, da det reduserer muligheten for gjenbruk, og du f\xe5r sikkerhetsutfordringer rundt fildeling og opprydning. Selv med dette m\xf8nsteret m\xe5 data deles gjennom et standard API."),(0,s.kt)("li",{parentName:"ul"},"Opprydding vil kunne skape utfordringer, spesielt ved uthenting av subsett fra kildesystemet.")),(0,s.kt)("h2",{id:"se-ogs\xe5"},"Se ogs\xe5"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/datadeling/god-praksis/integrasjonsmonster/hendelsesbasert/index"},"Hendelsesbasert provisjonering")),(0,s.kt)("li",{parentName:"ul"},"Krav til tilbyder ","[TODO lenke]"),(0,s.kt)("li",{parentName:"ul"},"Krav til konsument ","[TODO lenke]"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/datadeling/god-praksis/api-design"},"Utforming av API"))),(0,s.kt)("p",null,"TODO: Gammel:"),(0,s.kt)("h2",{id:"enkel-fullstendig-oppdatering"},"Enkel, fullstendig oppdatering"),(0,s.kt)("p",null,"En fullstendig oppdatering av et system, der du henter ut alle data fra kildesystemet, sammenligner disse, og oppdaterer din tjeneste relevante, endrede data."),(0,s.kt)("p",null,"Dette er en enklere form for integrasjon, som krever mindre utviklingsressurser \xe5 sette opp, men som er tregere og mer ressurskrevende \xe5 kj\xf8re, sammenlignet med en hendelsesbasert oppdatering. Dette er likevel noen ganger en fornuftig m\xe5te \xe5 integrere, hvis du har sm\xe5, enklere tjenester med lave behov for oppdaterte data. TODO."),(0,s.kt)("p",null,'Merk at denne typen integrasjon kan v\xe6re krevende for kildesystem som har mange data. \xc5 hente ut "alt" fra et API kan b\xe5de ta tid, og redusere ytelsen til API-et for andre. Dette er derfor vanligvis ikke et anbefalt integrasjonsm\xf8nster, selv om det er hensiktsmessig i enkelte tilfeller.'))}u.isMDXComponent=!0}}]);