"use strict";(self.webpackChunkprod=self.webpackChunkprod||[]).push([[7751],{3905:function(e,n,r){r.d(n,{Zo:function(){return g},kt:function(){return c}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},g=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),d=p(r),c=o,f=d["".concat(l,".").concat(c)]||d[c]||u[c]||i;return r?t.createElement(f,a(a({ref:n},g),{},{components:r})):t.createElement(f,a({ref:n},g))}));function c(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2245:function(e,n,r){r.r(n),r.d(n,{assets:function(){return g},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var t=r(3117),o=r(102),i=(r(7294),r(3905)),a=["components"],s={author:["Einar Jerpseth"],title:"Provisjonering"},l=void 0,p={unversionedId:"datadeling/begreper/provisjonering",id:"datadeling/begreper/provisjonering",title:"Provisjonering",description:"Provisjonering er \xe5 p\xe5 forh\xe5nd fylle en tjeneste med data, for eksempel",source:"@site/docs/datadeling/begreper/provisjonering.md",sourceDirName:"datadeling/begreper",slug:"/datadeling/begreper/provisjonering",permalink:"/datadeling-docs-tmp/docs/datadeling/begreper/provisjonering",editUrl:"https://github.com/jokim/datadelingsdokumentasjon/tree/master/docs/datadeling/begreper/provisjonering.md",tags:[],version:"current",frontMatter:{author:["Einar Jerpseth"],title:"Provisjonering"},sidebar:"tutorialSidebar",previous:{title:"Notifikasjon",permalink:"/datadeling-docs-tmp/docs/datadeling/begreper/notifikasjon"},next:{title:"Trelagsarkitektur",permalink:"/datadeling-docs-tmp/docs/datadeling/begreper/trelagsarkitektur"}},g={},u=[{value:"Just In Time provisjonering (JIT)",id:"just-in-time-provisjonering-jit",level:2}],d={toc:u};function c(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Provisjonering")," er \xe5 p\xe5 forh\xe5nd fylle en tjeneste med data, for eksempel\nbrukerkontoer. Mange tjenester trenger slike data for \xe5 kunne fungere. Dette\nkrever ofte en integrasjon."),(0,i.kt)("p",null,"IT-tjenester kan benytte flere provisjoneringsmetoder samtidig, f.eks. at\nrapportdata synkroniseres batch, mens brukerdata (f.eks. adresse eller\ntelefonnummer) oppdateres umiddelbart (hendelsesbasert provisjonering). For\neldre typer teknologi, det vi gerne kaller legacy-teknologier, benyttes gjerne\nkatalogtjenester som AD eller LDAP i stedet."),(0,i.kt)("h2",{id:"just-in-time-provisjonering-jit"},"Just In Time provisjonering (JIT)"),(0,i.kt)("p",null,"Programvare som bygger en brukerkonto/-profil under f\xf8rste innlogging kalles\ngjerne ",(0,i.kt)("em",{parentName:"p"},"just in time provisjonering")," (JIT)."),(0,i.kt)("p",null,"For moderne tjenester benyttes gjerne teknologier som billetteknologier, f.\neks. OpenID Connect (OIDC) og SAML. Informasjonen programvaren trenger for\nbygge brukerprofilen ligger i billetten (adgangstegnet) fra\ninnloggingstjenesten (FEIDE o.l.), i tillegg kan informasjon i billetten brukes\nfor \xe5 finne mer informasjon om identiteten/entiteten i et oppslagsverk, f.eks.\nen web service. Til dette kan tjenesten f.eks. benytte teknologien OAuth."),(0,i.kt)("p",null,"Integrasjonsmessig kan JIT virke fordelaktig, men ogs\xe5 her er det fallgruver.\nF.eks. skjer det ofte at JIT-tjenester bare bygger en veldig tynn profil, og at\nbrukeren manuelt m\xe5 registrere resten av sine data. Det er ofte begrenset med\ninformasjon som ligger i en billett."))}c.isMDXComponent=!0}}]);